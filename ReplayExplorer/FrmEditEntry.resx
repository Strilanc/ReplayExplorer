<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        wdWavs+hydqs1ebJ6vTj/v/5//35//3X6+6nt7lVVU8gISAAAAAAAABhYWFhYWFhYWFZWVlJSUkxMTEA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA1UmAsRlIYLDUSJS8S
        JS8AAANrjJTO/f+p0uejzuKp0uev2Oq24PTJ6vTj/v/j/v/j/v/X6+6nt7ljd30JDAwAAAAAAABhYWFh
        YWFhYWFhYWFhYWFhYWFZWVlJSUkxMTEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAsRlI2UWEeMToiNj4YLDUAAACTucbD8f+q1urJ6vTj/v/5//35//35//282+Z5hYko
        NDkAAAAAAAAAAABZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlZWVlSUlJEREQxMTEAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAD8/Pz8/Pz8/Pz8/PwAAAARHiY+W2weMToYLDUABQslOkTO/f/5//35
        //35//3M1tl5hYk5OjkLEBIAAAAAAABJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJSUlJ
        SUlEREQ5OjkoKSkAAAAAAAD8/Pz8/Pz8/Pz8/Pz8/PwAAAAAAAAAAAAAAAD8/Pz8/Pz8/Pz8/Pz8/PwA
        AAAeMTolPEkYLDUYJiyaxNXJ6vSnt7ljd30RGBsAAAAAAAAAAAAxMTExMTExMTExMTExMTExMTExMTEx
        MTExMTExMTExMTExMTExMTExMTExMTExMTExMTEoKSkgISAAAAAAAAD8/Pz8/Pz8/Pz8/Pz8/PwAAAAA
        AAAAAAAAAAD8/Pz8/Pz8/Pz8/Pz8/PwAAAAAAAALEBIJExcRHiYiLDEAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAD8/Pz8/Pz8/Pz8/Pz8/PwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>